/* #define IMPRIME 1 */
/*multiplicacao de matrizes: outer-product*/
#include <stdio.h>
#include <math.h>
#include <sys/time.h>
#include "mede_time.h"
#include <stdlib.h>

shared int size;

shared double a[2000][2000];
shared double b[2000][2000];
shared double c[2000][2000]; 

task spec init_matrix();
task spec axb();

/*inicia matriz*/
task body init_matrix()
  { 
    int i,j,k;
    forall i=0 to size-1 {   
        for (j=0;j<size;j++){
            a[i][j]=0;
            b[i][j]=0;
            for (k=0;  k<size;  k++){
                a[i][j] = a[i][j]+0.2*i+1.03*j+1.5*k;
                b[i][j] = b[i][j]+0.3*i+0.2*j+1.7*k;
            }
            c[i][j]=0;
        }
    }
  }



task body axb() {
    int i,j,k;
    forall i=0 to size-1 {  
        for (k=0;k<size;k++)
            for (j=0;j<size;j++)
                c[i][j]=c[i][j]+a[i][k]*b[k][j];
    }
} 

void main(argc, argv)
int argc;
char **argv;
{
    if (argc>1) { 
        size = atoi(argv[1]);
        printf("Matriz %dx%d\n",size,size);
    }
    else {
        printf("Tamanho da matriz: ");
        scanf("%d",&size);
    }
    TIMER_CLEAR;
    TIMER_START;
    create 4, init_matrix();
    wait_proc(init_matrix);
    TIMER_STOP;
    printf ("TEMPO INICIA [SIZE %d]: %12.7f\n",size,TIMER_ELAPSED);
    

    TIMER_CLEAR;
    TIMER_START; 
    create 4, axb();
    wait_proc(axb);
    TIMER_STOP;
    printf("TEMPO MULTIPLICA [SIZE %d]: %12.7f\n",size,TIMER_ELAPSED);
    printf("c[ 0][0]=%f c[ 300][300]=%f c[ %d][%d]=%f\n",c[0][0],c[300][300], size-1,size-1,c[size-1][size-1]);
    fflush(stdout);
}

